// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Routes Component render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <BrowserRouter>
    <div>
        <Switch>
            <Route
                component={[Function]}
                exact={true}
                path="/"
            />
            <Route
                component={[Function]}
                exact={true}
                path="/Configurations"
            />
            <Route
                component={[Function]}
                exact={true}
                path="/Evaluations"
            />
            <Route
                path="*"
                render={[Function]}
            />
        </Switch>
    </div>
</BrowserRouter>,
  "nodes": Array [
    <BrowserRouter>
      <div>
            <Switch>
                  <Route
                        component={[Function]}
                        exact={true}
                        path="/"
                  />
                  <Route
                        component={[Function]}
                        exact={true}
                        path="/Configurations"
                  />
                  <Route
                        component={[Function]}
                        exact={true}
                        path="/Evaluations"
                  />
                  <Route
                        path="*"
                        render={[Function]}
                  />
            </Switch>
      </div>
</BrowserRouter>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Routes />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Routes {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <BrowserRouter>
          <div>
                    <Switch>
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/Configurations"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/Evaluations"
                              />
                              <Route
                                        path="*"
                                        render={[Function]}
                              />
                    </Switch>
          </div>
</BrowserRouter>,
        "_debugID": 2,
        "_renderedOutput": <BrowserRouter>
          <div>
                    <Switch>
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/Configurations"
                              />
                              <Route
                                        component={[Function]}
                                        exact={true}
                                        path="/Evaluations"
                              />
                              <Route
                                        path="*"
                                        render={[Function]}
                              />
                    </Switch>
          </div>
</BrowserRouter>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Routes />,
}
`;
